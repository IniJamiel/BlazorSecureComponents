@using System.Runtime.CompilerServices
@using System.Net.Http.Json
@using System.Text.Json
@using CommonModelsLib
@inject HttpClient Http
<div class="@DivClass">
    <h2>
        @TitleText
    </h2>
@if (atasVisible)
{
    <form id="Atas">
        <!-- Email input -->
        <div class="form-outline mb-4">
            <label class="form-label" for="Email">Email Address</label>
            <input type="email" @bind="email" id="Email" class="form-control"/>
        </div>
            <button type="button" @onclick="requestOTP" class="btn btn-primary w-100 btn-block mb-4">Request OTP</button>
        <div class="form-outline mb-4">
            <label class="form-label" for="otp">Input The Code Sent to Your Email here</label>
            <div id="otp" class="inputs d-flex flex-row justify-content-center mt-2">
                <input class="m-2 text-center form-control rounded" type="text" @bind="otp[0]" id="first" maxlength="1"/>
                <input class="m-2 text-center form-control rounded" type="text" @bind="otp[1]" id="second" maxlength="1"/>
                <input class="m-2 text-center form-control rounded" type="text" @bind="otp[2]" id="third" maxlength="1"/>
                <input class="m-2 text-center form-control rounded" type="text" @bind="otp[3]" id="fourth" maxlength="1"/>
                <input class="m-2 text-center form-control rounded" type="text" @bind="otp[4]" id="fifth" maxlength="1"/>
                <input class="m-2 text-center form-control rounded" type="text" @bind="otp[5]" id="sixth" maxlength="1"/>
            </div>
        </div>
        <button type="button" @onclick="verifyOTP" class="btn btn-primary w-100 btn-block mb-4">Confirm</button>
        @if (!OTPWrong)
        {
            <p class="text-danger">*OTP is Incorrect!</p>
        }
    </form>
}
@if (bawahVisible)
{
    <form id="Bawah" visible="@bawahVisible">

        <div class="form-outline mb-4">
            <label class="form-label" for="Password">Password</label>
            <input type="password" @bind="password"
                   id="Password" class="form-control"/>
        </div>
        
        <div class="form-outline mb-4">
            <label class="form-label" for="PasswordConfirm">Confirm Password</label>
            <input type="password" @bind="confirmPassword"
                   id="PasswordConfirm" class="form-control"/>
        </div>
        @if (weakPassVisible)
        {
            <p class="text-danger">*Password is too weak</p>
        }
        @if (confirmPassVisible)
        {
            <p class="text-danger">*Confirm Password does not match</p>
        }
        <button type="button" disabled = "@weakPassVisible" @onclick="ChangePass" class="btn btn-primary w-100 btn-block mb-4">Confirm</button>
    </form>
}
</div>
@code {
    [Parameter]
    public string DivClass { set; get; } = "";
    [Parameter]
    public string TitleText { set; get; } = "Reset Password";

    private bool weakPassVisible => UserBase.validatePassword(password);
    private bool confirmPassVisible = false;

    private bool OTPWrong = false;

    private bool atasVisible = true;
    private bool bawahVisible = false;

    private string password = "";
    private string confirmPassword = "";


    private char[] otp = new char[6];
    private string stringOTP => new (otp);
    string email;
    string emailLock;

    private async Task requestOTP()
    {
        await Http.PostAsJsonAsync("api/ReqOTPEmail", email);
    }

    private async Task verifyOTP()
    {
        var resetObj = new ResetObj();
        resetObj.email = email;
        resetObj.OTP = stringOTP;

        var a = await Http.PostAsJsonAsync("api/verifOTP", resetObj);
        bool verified  = await JsonSerializer.DeserializeAsync<bool>(await a.Content.ReadAsStreamAsync());
        OTPWrong = !verified;
        bawahVisible = verified;
        atasVisible = !bawahVisible;
        emailLock = email;

    }

    private async Task ChangePass()
    {
        var changeObj= new ChangePassword();
        if (password != confirmPassword)
        {
            confirmPassVisible = true;
            return;
        }
        else
        {
            confirmPassVisible = false;
        }

        changeObj.OTP = stringOTP;
        changeObj.Email = emailLock;
        changeObj.Password = password;
        var a = await Http.PostAsJsonAsync("api/ChangePassword", changeObj);
        bool verified = await JsonSerializer.DeserializeAsync<bool>(await a.Content.ReadAsStreamAsync());
    }
}
